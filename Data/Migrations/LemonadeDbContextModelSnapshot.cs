// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(LemonadeDbContext))]
    partial class LemonadeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.ClientOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ClientOrders");
                });

            modelBuilder.Entity("Models.OrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<int>("product")
                        .HasColumnType("int");

                    b.Property<float>("quantity")
                        .HasColumnType("real");

                    b.Property<int?>("supplies")
                        .HasColumnType("int");

                    b.Property<float>("unityPrice")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("order");

                    b.HasIndex("product");

                    b.HasIndex("supplies");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("stock")
                        .HasColumnType("real");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<string>("unitMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("unityPrice")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("type");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Models.ProductType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("Models.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("suppliesOrder")
                        .HasColumnType("int");

                    b.Property<int>("tel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Models.SuppliesOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.Property<int>("supplier")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("supplier");

                    b.ToTable("SuppliesOrders");
                });

            modelBuilder.Entity("Models.OrderDetail", b =>
                {
                    b.HasOne("Models.ClientOrder", "clientOrder")
                        .WithMany("orderDetails")
                        .HasForeignKey("order");

                    b.HasOne("Models.Product", "oProduct")
                        .WithMany("orderDetails")
                        .HasForeignKey("product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.SuppliesOrder", "suppliesOrder")
                        .WithMany("oDetail")
                        .HasForeignKey("supplies");

                    b.Navigation("clientOrder");

                    b.Navigation("oProduct");

                    b.Navigation("suppliesOrder");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.HasOne("Models.ProductType", "productType")
                        .WithMany("product")
                        .HasForeignKey("type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productType");
                });

            modelBuilder.Entity("Models.SuppliesOrder", b =>
                {
                    b.HasOne("Models.Supplier", "oSupplier")
                        .WithMany("oSuppliesO")
                        .HasForeignKey("supplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("oSupplier");
                });

            modelBuilder.Entity("Models.ClientOrder", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("Models.ProductType", b =>
                {
                    b.Navigation("product");
                });

            modelBuilder.Entity("Models.Supplier", b =>
                {
                    b.Navigation("oSuppliesO");
                });

            modelBuilder.Entity("Models.SuppliesOrder", b =>
                {
                    b.Navigation("oDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
